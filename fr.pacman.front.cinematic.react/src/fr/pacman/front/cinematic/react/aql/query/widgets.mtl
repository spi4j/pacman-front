[module widgets(	'http://www.obeonetwork.org/dsl/cinematic/3.0.0', 
					'http://www.obeonetwork.org/dsl/cinematic/view/1.0.0')/]

[import fr::pacman::front::core::aql::query::widgets/]

[comment vérifie si il est possible d'appliquer du positionnement css sur l'élément./]
[query public isEligibleForCSSPositioning(l: view::Layout) : Boolean =  l.viewElement = null 
  or (l.viewElement <> null and (not l.viewElement.isRadio() and not l.viewElement.isCheckBox()))/]
  
[comment vérifie si le composant est éligible pour être dans la liste des 'formValues' de react-hook-form./]
[query public isEligibleForFormValues(e : view::ViewElement) : Boolean = e.widget.metadataDefinitions ->
  exists(md |'FormValues'.equalsIgnoreCase(md.title) and 'true'.equalsIgnoreCase(md.body))/]
  
[comment retourne l'uri react attachée au composant./]
[query public reactUriForElement(e : view::AbstractViewElement) : String = let md = e.widget.metadataDefinitions
   ->select(o | 'ReactUri'.equalsIgnoreCase(o.title))->first() in if md = null then '' else md.body endif/]